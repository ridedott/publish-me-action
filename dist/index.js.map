"{\"version\":3,\"sources\":[\"/webpack/bootstrap\",\"../external \\\"os\\\"\",\"../src/index.ts\",\"../node_modules/@actions/core/lib/command.js\",\"../node_modules/@actions/core/lib/core.js\",\"../external \\\"path\\\"\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"ab\",\"__dirname\",\"startup\",\"require\",\"core_1\",\"Configuration\",\"main\",\"async\",\"branch\",\"getInput\",\"isDryRun\",\"dryRun\",\"isDebug\",\"debug\",\"console\",\"log\",\"JSON\",\"stringify\",\"catch\",\"error\",\"setFailed\",\"__importStar\",\"this\",\"mod\",\"__esModule\",\"result\",\"k\",\"Object\",\"hasOwnProperty\",\"defineProperty\",\"value\",\"os\",\"issueCommand\",\"command\",\"properties\",\"message\",\"cmd\",\"Command\",\"process\",\"stdout\",\"write\",\"toString\",\"EOL\",\"issue\",\"name\",\"CMD_STRING\",\"[object Object]\",\"cmdStr\",\"keys\",\"length\",\"first\",\"key\",\"val\",\"escapeProperty\",\"escapeData\",\"s\",\"replace\",\"__awaiter\",\"thisArg\",\"_arguments\",\"P\",\"generator\",\"adopt\",\"resolve\",\"Promise\",\"reject\",\"fulfilled\",\"step\",\"next\",\"e\",\"rejected\",\"done\",\"then\",\"apply\",\"command_1\",\"path\",\"ExitCode\",\"exportVariable\",\"env\",\"setSecret\",\"secret\",\"addPath\",\"inputPath\",\"delimiter\",\"options\",\"toUpperCase\",\"required\",\"Error\",\"trim\",\"setOutput\",\"exitCode\",\"Failure\",\"warning\",\"info\",\"startGroup\",\"endGroup\",\"group\",\"fn\",\"saveState\",\"getState\"],\"mappings\":\"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\",\"file\":\"index.js\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t__webpack_require__.ab = __dirname + \\\"/\\\";\\n\\n \\t// the startup function\\n \\tfunction startup() {\\n \\t\\t// Load entry module and return exports\\n \\t\\treturn __webpack_require__(325);\\n \\t};\\n\\n \\t// run startup\\n \\treturn startup();\\n\",\"module.exports = require(\\\"os\\\");\",\"// import { setFailed } from '@actions/core';\\n// import { env as environment } from 'process';\\n// import * as semanticRelease from 'semantic-release';\\n//\\n// import {\\n//   generatePlugins,\\n//   parserOptions,\\n//   releaseRules,\\n//   transform,\\n// } from './config';\\n// import {\\n//   handleBranchFlag,\\n//   handleDebugFlag,\\n//   handleDryRunFlag,\\n//   handleScriptPathFlag,\\n// } from './optionsHandlers';\\n// import { Commands, reportResults, runTask } from './tasks';\\n//\\n// if (handleDebugFlag() === true) {\\n//   /* eslint-disable @typescript-eslint/no-require-imports */\\n//   /* eslint-disable-next-line global-require */\\n//   require('debug').enable('semantic-release:*');\\n//   /* eslint-enable @typescript-eslint/no-require-imports */\\n// }\\n//\\n// const main = async (): Promise<void> => {\\n//   await Promise.all([\\n//     runTask(Commands.PreInstallPlugins),\\n//     runTask(Commands.RemoveNpmrc),\\n//   ]);\\n//\\n//   const result = await semanticRelease({\\n//     /* eslint-disable unicorn/prevent-abbreviations */\\n//     ci: false,\\n//     ...handleBranchFlag(),\\n//     ...handleDryRunFlag(),\\n//     parserOpts: parserOptions,\\n//     plugins: generatePlugins({\\n//       publishToNpm: environment.NPM_TOKEN !== undefined,\\n//       scriptPath: await handleScriptPathFlag(),\\n//     }),\\n//     releaseRules,\\n//     writerOpts: { transform },\\n//     /* eslint-enable unicorn/prevent-abbreviations */\\n//   });\\n//\\n//   await reportResults(result);\\n// };\\n//\\n// main().catch((error: Error): void => {\\n//   setFailed(`An unexpected error occurred: ${error}, ${error.stack}.`);\\n// });\\n\\nimport { getInput, setFailed } from '@actions/core';\\n\\nexport enum Configuration {\\n  branch = 'BRANCH',\\n  dryRun = 'DRY_RUN',\\n  debug = 'DEBUG',\\n}\\n\\nconst main = async (): Promise<void> => {\\n  const branch: string = getInput(Configuration.branch);\\n  const isDryRun: boolean = getInput(Configuration.dryRun) === 'true';\\n  const isDebug: boolean = getInput(Configuration.debug) === 'true';\\n\\n  // eslint-disable-next-line no-console\\n  console.log(JSON.stringify({\\n    branch, isDebug, isDryRun\\n  }));\\n};\\n\\nmain()\\n  .catch((error: Error): void => {\\n    setFailed(JSON.stringify(error));\\n  });\\n\",\"\\\"use strict\\\";\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\n    result[\\\"default\\\"] = mod;\\n    return result;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst os = __importStar(require(\\\"os\\\"));\\n/**\\n * Commands\\n *\\n * Command Format:\\n *   ::name key=value,key=value::message\\n *\\n * Examples:\\n *   ::warning::This is the message\\n *   ::set-env name=MY_VAR::some value\\n */\\nfunction issueCommand(command, properties, message) {\\n    const cmd = new Command(command, properties, message);\\n    process.stdout.write(cmd.toString() + os.EOL);\\n}\\nexports.issueCommand = issueCommand;\\nfunction issue(name, message = '') {\\n    issueCommand(name, {}, message);\\n}\\nexports.issue = issue;\\nconst CMD_STRING = '::';\\nclass Command {\\n    constructor(command, properties, message) {\\n        if (!command) {\\n            command = 'missing.command';\\n        }\\n        this.command = command;\\n        this.properties = properties;\\n        this.message = message;\\n    }\\n    toString() {\\n        let cmdStr = CMD_STRING + this.command;\\n        if (this.properties && Object.keys(this.properties).length > 0) {\\n            cmdStr += ' ';\\n            let first = true;\\n            for (const key in this.properties) {\\n                if (this.properties.hasOwnProperty(key)) {\\n                    const val = this.properties[key];\\n                    if (val) {\\n                        if (first) {\\n                            first = false;\\n                        }\\n                        else {\\n                            cmdStr += ',';\\n                        }\\n                        cmdStr += `${key}=${escapeProperty(val)}`;\\n                    }\\n                }\\n            }\\n        }\\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\\n        return cmdStr;\\n    }\\n}\\nfunction escapeData(s) {\\n    return (s || '')\\n        .replace(/%/g, '%25')\\n        .replace(/\\\\r/g, '%0D')\\n        .replace(/\\\\n/g, '%0A');\\n}\\nfunction escapeProperty(s) {\\n    return (s || '')\\n        .replace(/%/g, '%25')\\n        .replace(/\\\\r/g, '%0D')\\n        .replace(/\\\\n/g, '%0A')\\n        .replace(/:/g, '%3A')\\n        .replace(/,/g, '%2C');\\n}\\n//# sourceMappingURL=command.js.map\",\"\\\"use strict\\\";\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\n    result[\\\"default\\\"] = mod;\\n    return result;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst command_1 = require(\\\"./command\\\");\\nconst os = __importStar(require(\\\"os\\\"));\\nconst path = __importStar(require(\\\"path\\\"));\\n/**\\n * The code to exit an action\\n */\\nvar ExitCode;\\n(function (ExitCode) {\\n    /**\\n     * A code indicating that the action was successful\\n     */\\n    ExitCode[ExitCode[\\\"Success\\\"] = 0] = \\\"Success\\\";\\n    /**\\n     * A code indicating that the action was a failure\\n     */\\n    ExitCode[ExitCode[\\\"Failure\\\"] = 1] = \\\"Failure\\\";\\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\\n//-----------------------------------------------------------------------\\n// Variables\\n//-----------------------------------------------------------------------\\n/**\\n * Sets env variable for this action and future actions in the job\\n * @param name the name of the variable to set\\n * @param val the value of the variable\\n */\\nfunction exportVariable(name, val) {\\n    process.env[name] = val;\\n    command_1.issueCommand('set-env', { name }, val);\\n}\\nexports.exportVariable = exportVariable;\\n/**\\n * Registers a secret which will get masked from logs\\n * @param secret value of the secret\\n */\\nfunction setSecret(secret) {\\n    command_1.issueCommand('add-mask', {}, secret);\\n}\\nexports.setSecret = setSecret;\\n/**\\n * Prepends inputPath to the PATH (for this action and future actions)\\n * @param inputPath\\n */\\nfunction addPath(inputPath) {\\n    command_1.issueCommand('add-path', {}, inputPath);\\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\\n}\\nexports.addPath = addPath;\\n/**\\n * Gets the value of an input.  The value is also trimmed.\\n *\\n * @param     name     name of the input to get\\n * @param     options  optional. See InputOptions.\\n * @returns   string\\n */\\nfunction getInput(name, options) {\\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\\n    if (options && options.required && !val) {\\n        throw new Error(`Input required and not supplied: ${name}`);\\n    }\\n    return val.trim();\\n}\\nexports.getInput = getInput;\\n/**\\n * Sets the value of an output.\\n *\\n * @param     name     name of the output to set\\n * @param     value    value to store\\n */\\nfunction setOutput(name, value) {\\n    command_1.issueCommand('set-output', { name }, value);\\n}\\nexports.setOutput = setOutput;\\n//-----------------------------------------------------------------------\\n// Results\\n//-----------------------------------------------------------------------\\n/**\\n * Sets the action status to failed.\\n * When the action exits it will be with an exit code of 1\\n * @param message add error issue message\\n */\\nfunction setFailed(message) {\\n    process.exitCode = ExitCode.Failure;\\n    error(message);\\n}\\nexports.setFailed = setFailed;\\n//-----------------------------------------------------------------------\\n// Logging Commands\\n//-----------------------------------------------------------------------\\n/**\\n * Writes debug message to user log\\n * @param message debug message\\n */\\nfunction debug(message) {\\n    command_1.issueCommand('debug', {}, message);\\n}\\nexports.debug = debug;\\n/**\\n * Adds an error issue\\n * @param message error issue message\\n */\\nfunction error(message) {\\n    command_1.issue('error', message);\\n}\\nexports.error = error;\\n/**\\n * Adds an warning issue\\n * @param message warning issue message\\n */\\nfunction warning(message) {\\n    command_1.issue('warning', message);\\n}\\nexports.warning = warning;\\n/**\\n * Writes info to log with console.log.\\n * @param message info message\\n */\\nfunction info(message) {\\n    process.stdout.write(message + os.EOL);\\n}\\nexports.info = info;\\n/**\\n * Begin an output group.\\n *\\n * Output until the next `groupEnd` will be foldable in this group\\n *\\n * @param name The name of the output group\\n */\\nfunction startGroup(name) {\\n    command_1.issue('group', name);\\n}\\nexports.startGroup = startGroup;\\n/**\\n * End an output group.\\n */\\nfunction endGroup() {\\n    command_1.issue('endgroup');\\n}\\nexports.endGroup = endGroup;\\n/**\\n * Wrap an asynchronous function call in a group.\\n *\\n * Returns the same type as the function itself.\\n *\\n * @param name The name of the group\\n * @param fn The function to wrap in the group\\n */\\nfunction group(name, fn) {\\n    return __awaiter(this, void 0, void 0, function* () {\\n        startGroup(name);\\n        let result;\\n        try {\\n            result = yield fn();\\n        }\\n        finally {\\n            endGroup();\\n        }\\n        return result;\\n    });\\n}\\nexports.group = group;\\n//-----------------------------------------------------------------------\\n// Wrapper action state\\n//-----------------------------------------------------------------------\\n/**\\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\\n *\\n * @param     name     name of the state to store\\n * @param     value    value to store\\n */\\nfunction saveState(name, value) {\\n    command_1.issueCommand('save-state', { name }, value);\\n}\\nexports.saveState = saveState;\\n/**\\n * Gets the value of an state set by this action's main execution.\\n *\\n * @param     name     name of the state to get\\n * @returns   string\\n */\\nfunction getState(name) {\\n    return process.env[`STATE_${name}`] || '';\\n}\\nexports.getState = getState;\\n//# sourceMappingURL=core.js.map\",\"module.exports = require(\\\"path\\\");\"]}"